NAME("Left Arrow"),CHAR("←"),TIP(
                        _("Assignment")
                        _("")
                        _("Naming:")
                        _("    V ← 5 6 7")
                        _("    (i(j k)) ← 4(5 6)")
                        _("    sum ← +⌿")
                        _("    product ← {×/⍵}")
                        _("    inverse ← ⍣¯1")
                        _("")
                        _("Modification:")
                        _("    V +← 1")
                        _("    V[2] ← 0")
                        _("    (⊃V) ← 2")
                        _("")
                        )
BLANK
NAME("Plus"),CHAR("+"),TIP(
                        _("Monadic function:  Conjugate")
                        _("")
                        _("      + 1.2 0j4 ¯5j¯6")
                        _("1.2 0J¯4 ¯5J6")
                        _("")
                        _("Dyadic function:   Plus")
                        _("")
                        _("      1 2 3 4 + 10")
                        _("11 12 13 14")
                        _("")
                        _("      1 2 3 + 2 ¯4 1")
                        _("3 ¯2 4")
                        _("")
                        _("      +/ 1 2 3")
                        _("6")
                        _("")
                        )
NAME("Minus"),CHAR("-"),TIP(
                        _("Monadic function:  Negate")
                        _("")
                        _("      - 3.2 ¯7 0")
                        _("¯3.2 7 0")
                        _("")
                        _("Dyadic function:   Minus")
                        _("")
                        _("      3 7 9 - 5")
                        _("¯2 2 4")
                        _("")
                        _("      5 1 4 - 2 3 4")
                        _("3 ¯2 0")
                        _("")
                        )
NAME("Times"),CHAR("×"),TIP(
                        _("Monadic function:  Direction")
                        _("")
                        _("      × 3.1 ¯2 0 3j4")
                        _("1 ¯1 0 0.6J0.8")
                        _("")
                        _("Dyadic function:   Times")
                        _("")
                        _("      2 ¯3 4.5 × ¯3 ¯4 2")
                        _("¯6 12 9")
                        _("")
                        _("      3 1 4 × 10")
                        _("30 10 40")
                        _("")
                        _("      ×/ 2 3 4")
                        _("24")
                        _("")
                        )
NAME("Divide"),CHAR("÷"),TIP(
                        _("Monadic function:  Reciprocal")
                        _("")
                        _("      ÷ 1 2 3")
                        _("1 0.5 0.333333")
                        _("")
                        _("Dyadic function:   Divide")
                        _("")
                        _("      1 2 3 ÷ 4 5 7")
                        _("0.25 0.4 0.428571")
                        _("")
                        _("      10 ÷ ¯2 0.5")
                        _("¯5 20")
                        _("")
                        )
NAME("Star"),CHAR("*"),TIP(
                        _("Monadic function:  Exponential")
                        _("")
                        _("      * 0 1 2")
                        _("1 2.71828 7.38906")
                        _("")
                        _("Dyadic function:   Power")
                        _("")
                        _("      49 5 ¯4 * 0.5 2 0.5")
                        _("7 25 0J2")
                        _("")
                        )
NAME("Log"),CHAR("⍟"),TIP(
                        _("Monadic function:  Natural Logarithm")
                        _("")
                        _("      ⍟ 1 2 3 2.7182818285")
                        _("0 0.693147 1.09861 1")
                        _("")
                        _("Dyadic function:   Logarithm")
                        _("")
                        _("      2 10 ⍟ 32 1000")
                        _("5 3")
                        _("")
                        )
NAME("Domino"),CHAR("⌹"),TIP(
                        _("Monadic function:  Matrix Inverse")
                        _("")
                        _("      mat")
                        _("1 2")
                        _("3 4")
                        _("      ⌹ mat")
                        _("¯2    1")
                        _(" 1.5 ¯0.5")
                        _("")
                        _("Dyadic function:   Matrix Divide")
                        _("")
                        _("      5 6 ⌹ mat")
                        _("¯4 4.5")
                        _("")
                        )
NAME("Circle"),CHAR("○"),TIP(
                        _("Monadic function:  Pi Times")
                        _("")
                        _("      ○ 0 1 2")
                        _("0 3.14159 6.28319")
                        _("")
                        _("Dyadic function:   Circular Functions (Trig)")
                        _("          Note: Angles are in radians ")
                        _("                radians ← ○ degrees ÷ 180")
                        _("")
                        _("      1 ○ 0 1.5707963 3.1415927")
                        _("0 1 ¯4.64102E¯8")
                        _("")
                        _(" ⍺   ⍺ ○ ⍵         ⍺   ⍺ ○ ⍵    ")
                        _("                   0   (1-⍵*2)*0.5")
                        _("¯1   Arcsin ⍵      1   Sine ⍵")
                        _("¯2   Arccos ⍵      2   Cosine ⍵")
                        _("¯3   Arctan ⍵      3   Tangent ⍵")
                        _("¯4   (¯1+⍵*2)*0.5  4   (1+⍵*2)*0.5")
                        _("¯5   Arcsinh ⍵     5   Sinh ⍵")
                        _("¯6   Arccosh ⍵     6   Cosh ⍵")
                        _("¯7   Arctanh ⍵     7   Tanh ⍵")
                        _("¯8   -8○⍵          8   (-1+⍵*2)*0.5")
                        _("¯9   ⍵             9   real part of ⍵")
                        _("¯10  +⍵           10   |⍵")
                        _("¯11  ⍵×0J1        11   imaginary part of ⍵")
                        _("¯12  *⍵×0J1       12   phase of ⍵")
                        _("")
                        )
NAME("Exclamation Mark"),CHAR("!"),TIP(
                        _("Monadic function:  Factorial")
                        _("")
                        _("      ! 3 9 ¯0.11")
                        _("6 362880 1.07683")
                        _("")
                        _("Dyadic function:   Binomial")
                        _("")
                        _("      2 1 3 ! 3 10 ¯0.11")
                        _("3 10 ¯0.0429385")
                        _("")
                        )
NAME("Question Mark"),CHAR("?"),TIP(
                        _("Monadic function:  Roll")
                        _("")
                        _("      ? 6 6 6 6 6")
                        _("4 3 6 3 5")
                        _("")
                        _("      ? 0 0")
                        _("0.260561 0.929928")
                        _("")
                        _("Dyadic function:   Deal")
                        _("")
                        _("      13 ? 52")
                        _("36 31 44 11 27 42 13 8 2 33 19 34 6")
                        _("")
                        )
BLANK
NAME("Stile"),CHAR("|"),TIP(
                        _("Monadic function:  Magnitude (Absolute value)")
                        _("")
                        _("      | 2.3 ¯4 0 3j4")
                        _("2.3 4 0 5")
                        _("")
                        _("Dyadic function:   Residue (Remainder/Modulus)")
                        _("")
                        _("      2 10 ¯2.5 | 7 ¯13 8")
                        _("1 7 ¯2")
                        _("")
                        )
NAME("Upstile"),CHAR("⌈"),TIP(
                        _("Monadic function:  Ceiling (Round Up)")
                        _("")
                        _("      ⌈ 3.4 ¯3.4 3 0")
                        _("4 ¯3 3 0")
                        _("")
                        _("Dyadic function:   Maximum")
                        _("")
                        _("      1.1 ¯2 ⌈ 8.1 ¯3.4")
                        _("8.1 ¯2")
                        _("")
                        _("      ⌈/ 3 1 4 1")
                        _("4")
                        _("")
                        )
NAME("Downstile"),CHAR("⌊"),TIP(
                        _("Monadic function:  Floor (Round Down)")
                        _("")
                        _("      ⌊ 3.4 ¯3.4 3 0")
                        _("3 ¯4 3 0")
                        _("")
                        _("Dyadic function:   Minimum")
                        _("")
                        _("      1.1 ¯2 ⌊ 8.1 ¯3.4")
                        _("1.1 ¯3.4")
                        _("")
                        _("      ⌊/ 3 1 4 1")
                        _("1")
                        _("")
                        )
NAME("Up Tack"),CHAR("⊥"),TIP(
                        _("Dyadic function:   Decode")
                        _("")
                        _("      2 ⊥ 1 1 0 1   ⍝ binary decode")
                        _("13")
                        _("")
                        _("⍝ mixed radix: conversion of hours,")
                        _("⍝ minutes and seconds to seconds:")
                        _("")
                        _("      24 60 60 ⊥ 2 46 40")
                        _("10000")
                        _("")
                        )
NAME("Down Tack"),CHAR("⊤"),TIP(
                        _("Dyadic function:   Encode")
                        _("")
                        _("      2 2 2 2 ⊤ 5 7 12   ⍝ binary encode")
                        _("0 0 1")
                        _("1 1 1")
                        _("0 1 0")
                        _("1 1 0")
                        _("")
                        _("⍝ mixed radix: encode of 10000 seconds")
                        _("⍝ to hours, minutes and seconds:")
                        _("")
                        _("      24 60 60 ⊤ 10000")
                        _("2 46 40")
                        _("")
                        )
NAME("Left Tack"),CHAR("⊣"),TIP(
                        _("Monadic function:   Same")
                        _("")
                        _("      ⊣  1 2 3")
                        _("1 2 3")
                        _("")
                        _("Dyadic function: Left")
                        _("")
                        _("      'L' ⊣ 'R'")
                        _("L")
                        _("      ⊣/ 1 2 3")
                        _("1")
                        _("")
                        )
NAME("Right Tack"),CHAR("⊢"),TIP(
                        _("Monadic function:  Same")
                        _("")
                        _("      ⊢  1 2 3")
                        _("1 2 3")
                        _("")
                        _("Dyadic function:   Right")
                        _("")
                        _("      'L' ⊢ 'R'")
                        _("R")
                        _("      ⊢/ 1 2 3")
                        _("3")
                        _("")
                        )
BLANK
NAME("Equal"),CHAR("="),TIP(
                        _("Dyadic function:   Equal To")
                        _("")
                        _("      1 2 3 = 4 2 ¯1")
                        _("0 1 0")
                        _("")
                        _("      0 1 0 1 = 0 0 1 1")
                        _("1 0 0 1")
                        _("")
                        _("      'Banana' = 'a'")
                        _("0 1 0 1 0 1")
                        _("")
                        _("      7 = '7'")
                        _("0")
                        _("")
                        )
NAME("Not Equal"),CHAR("≠"),TIP(
                        _("Monadic function:  Unique Mask")
                        _("")
                        _("      ≠ 'Banana'")
                        _("1 1 1 0 0 0")
                        _("")
                        _("      ≠ 'Mississippi'")
                        _("1 1 1 0 0 0 0 0 1 0 0")
                        _("")
                        _("")
                        _("Dyadic function:   Not Equal To")
                        _("")
                        _("      1 2 3 ≠ 4 2 ¯1")
                        _("1 0 1")
                        _("")
                        _("      0 1 0 1 ≠ 0 0 1 1")
                        _("0 1 1 0")
                        _("")
                        _("      'Banana' ≠ 'a'")
                        _("1 0 1 0 1 0")
                        _("")
                        _("      7 ≠ '7'")
                        _("1")
                        _("")
                        )
NAME("Less Than Or Equal To"),CHAR("≤"),TIP(
                        _("Dyadic function:   Less Than or Equal To")
                        _("")
                        _("      1 2 3 ≤ 4 2 ¯1")
                        _("1 1 0")
                        _("      1 2 3 ≤ 2")
                        _("1 1 0")
                        _("")
                        )
NAME("Less Than"),CHAR("<"),TIP(
                        _("Dyadic function:   Less Than")
                        _("")
                        _("      1 2 3 < 4 2 ¯1")
                        _("1 0 0")
                        _("      1 2 3 < 2")
                        _("1 0 0")
                        _("")
                        )
NAME("Greater Than"),CHAR(">"),TIP(
                        _("Dyadic function:   Greater Than")
                        _("")
                        _("      1 2 3 > 4 2 ¯1")
                        _("0 0 1")
                        _("      1 2 3 > 2")
                        _("0 0 1")
                        _("")
                        )
NAME("Greater Than Or Equal To"),CHAR("≥"),TIP(
                        _("Dyadic function:   Greater Than or Equal To")
                        _("")
                        _("      1 2 3 ≥ 4 2 ¯1")
                        _("0 1 1")
                        _("      1 2 3 ≥ 2")
                        _("0 1 1")
                        _("")
                        )
NAME("Equal Underbar"),CHAR("≡"),TIP(
                        _("Monadic function:  Depth")
                        _("")
                        _("      ≡ 7")
                        _("0")
                        _("      ≡ 'abc'")
                        _("1")
                        _("      ≡ (1 2)(3 4)")
                        _("2")
                        _("      ≡ (1 2)(3 4)5")
                        _("¯2")
                        _("")
                        _("Dyadic function:   Match")
                        _("")
                        _("      'b' 'e' 'x' ≡ 'bex'")
                        _("1")
                        _("      1 ≡ 1 1")
                        _("0")
                        _("")
                        )
NAME("Equal Underbar Slash"),CHAR("≢"),TIP(
                        _("Monadic function:  Tally ")
                        _("")
                        _("      ≢ 'a'")
                        _("1")
                        _("      ≢ 7 4 2")
                        _("3")
                        _("      ≢ 5 4 3⍴0 ")
                        _("5")
                        _("      ≢ (1 2)(3 4)")
                        _("2")
                        _("     mat")
                        _("1 2 3")
                        _("4 5 6")
                        _("      ≢ mat   ⍝ note how \"tally\"")
                        _("2")
                        _("      ⍴ mat   ⍝ differs from \"shape\"")
                        _("2 3")
                        _("")
                        _("Dyadic function:   Not Match ")
                        _("")
                        _("      'bex' ≢ 'b','e','x' ")
                        _("0")
                        _("      1 ≢ 1 1")
                        _("1")
                        _("")
                        )
BLANK
NAME("Logical OR"),CHAR("∨"),TIP(
                        _("Dyadic function:   Greatest Common Divisor (OR)")
                        _("")
                        _("      0 1 0 1 ∨ 0 0 1 1")
                        _("0 1 1 1")
                        _("")
                        _("      15 1 2 7 ∨ 35 1 4 0")
                        _("5 1 2 7")
                        _("")
                        )
NAME("Logical AND"),CHAR("∧"),TIP(
                        _("Dyadic function:  Lowest Common Multiple (AND)")
                        _("")
                        _("      0 1 0 1 ∧ 0 0 1 1")
                        _("0 0 0 1")
                        _("")
                        _("      15 1 2 7 ∧ 35 1 4 0")
                        _("105 1 4 0")
                        _("")
                        )
NAME("Logical NAND"),CHAR("⍲"),TIP(
                        _("Dyadic function:   NAND")
                        _("")
                        _("      0 1 0 1 ⍲ 0 0 1 1")
                        _("1 1 1 0")
                        _("")
                        )
NAME("Logical NOR"),CHAR("⍱"),TIP(
                        _("Dyadic function:   NOR")
                        _("")
                        _("      0 1 0 1 ⍱ 0 0 1 1")
                        _("1 0 0 0")
                        _("")
                        )
BLANK
NAME("Up Arrow"),CHAR("↑"),TIP(
                        _("Monadic function:  Mix")
                        _("")
                        _("      ↑ 'Hip' 'Hop'")
                        _("Hip")
                        _("Hop")
                        _("      ↑ (6 4) 5 3")
                        _("6 4")
                        _("5 0")
                        _("3 0")
                        _("      ↑[0.5] 'Hip' 'Hop'")
                        _("HH")
                        _("io")
                        _("pp")
                        _("")
                        _("Dyadic function:   Take")
                        _("")
                        _("      4 ↑ 'Pineapple'")
                        _("Pine")
                        _("      ¯5 ↑ 'Pineapple'")
                        _("apple")
                        _("")
                        _("      mat")
                        _("1  2  3  4")
                        _("5  6  7  8")
                        _("9 10 11 12")
                        _("")
                        _("      2 ¯3 ↑ mat")
                        _("2 3 4")
                        _("6 7 8")
                        _("")
                        _("      ¯2 ↑ mat")
                        _("5  6  7  8")
                        _("9 10 11 12")
                        _("")
                        _("      ¯2 3 ↑ 7")
                        _("0 0 0")
                        _("7 0 0")
                        _("")
                        )
NAME("Down Arrow"),CHAR("↓"),TIP(
                        _("Monadic function:  Split")
                        _("")
                        _("      mat")
                        _("1  2  3  4")
                        _("5  6  7  8")
                        _("9 10 11 12")
                        _("")
                        _("      ↓ mat")
                        _("┌───────┬───────┬──────────┐")
                        _("│1 2 3 4│5 6 7 8│9 10 11 12│")
                        _("└───────┴───────┴──────────┘")
                        _("")
                        _("      ↓[1] mat")
                        _("┌─────┬──────┬──────┬──────┐")
                        _("│1 5 9│2 6 10│3 7 11│4 8 12│")
                        _("└─────┴──────┴──────┴──────┘")
                        _("")
                        _("Dyadic function:   Drop")
                        _("")
                        _("      4 ↓ 'Pineapple'")
                        _("apple")
                        _("      ¯5 ↓ 'Pineapple'")
                        _("Pine")
                        _("      1 ¯2 ↓ mat")
                        _("5  6")
                        _("9 10")
                        _("      1 ↓ mat")
                        _("5  6  7  8")
                        _("9 10 11 12")
                        _("")
                        )
NAME("Left Shoe"),CHAR("⊂"),TIP(
                        _("Monadic function:  Enclose")
                        _("")
                        _("      1(2 3)")
                        _("┌─┬───┐")
                        _("│1│2 3│")
                        _("└─┴───┘")
                        _("      ⊂ 1(2 3)")
                        _("┌───────┐")
                        _("│┌─┬───┐│")
                        _("││1│2 3││")
                        _("│└─┴───┘│")
                        _("└───────┘")
                        _("      ⊂⊂ 1(2 3)")
                        _("┌─────────┐")
                        _("│┌───────┐│")
                        _("││┌─┬───┐││")
                        _("│││1│2 3│││")
                        _("││└─┴───┘││")
                        _("│└───────┘│")
                        _("└─────────┘")
                        _("")
                        _("Dyadic function:   Partitioned Enclose")
                        _("")
                        _("       0 1 0 1 ⊂ 1 2 3 4")
                        _("┌───┬─┐")
                        _("│2 3│4│")
                        _("└───┴─┘")
                        _("")
                        )
NAME("Right Shoe"),CHAR("⊃"),TIP(
                        _("Monadic function:  First")
                        _("")
                        _("      ⊃ 'Word'")
                        _("W")
                        _("      ⊃ (1 2)(3 4 5)")
                        _("1 2")
                        _("")
                        _("Dyadic function:   Pick")
                        _("")
                        _("      3 ⊃ 'Word'")
                        _("r")
                        _("      2 ⊃ (1 2)(3 4 5)")
                        _("3 4 5")
                        _("")
                        _("      2 1 ⊃ (1 2)(3 4 5)")
                        _("3")
                        _("")
                        )
#if HAS_UNICODE
NAME("Left Shoe Underbar"),CHAR("⊆"),TIP(
                        _("Monadic function:  Nest")
                        _("")
                        _("      ⊆ 'this'")
                        _("┌────┐")
                        _("│this│")
                        _("└────┘")
                        _("      ⊆ 'this' 'that'")
                        _("┌────┬────┐")
                        _("│this│that│")
                        _("└────┴────┘")
                        _("")
                        _("Dyadic function:   Partition")
                        _("")
                        _("      1 0 0 1 1 ⊆ 1 2 3 4 5")
                        _("┌─┬───┐")
                        _("│1│4 5│")
                        _("└─┴───┘")
                        _("       1 1 2 2 2⊆⍳5")
                        _("┌───┬─────┐")
                        _("│1 2│3 4 5│")
                        _("└───┴─────┘")
                        _("    ' ' (≠⊆⊢) ' many a  time'")
                        _("┌────┬─┬────┐")
                        _("│many│a│time│")
                        _("└────┴─┴────┘")
                        _("")
                        )
#endif
NAME("Squad"),CHAR("⌷"),TIP(
                        _("Monadic function:  Materialise")
                        _("")
                        _("      ⌷ ⍵")
                        _("If ⍵ is an array, returns ⍵.")
                        _("If ⍵ is ref to an instance of a Class with a ")
                        _("Numbered Default property, all items of that property")
                        _("are returned.")
                        _("If ⍵ is a collection, returns all elements")
                        _("in the collection as an array.")
                        _("")
                        _("Dyadic function:   Index")
                        _("")
                        _("      mat")
                        _("1  2  3  4")
                        _("5  6  7  8")
                        _("9 10 11 12")
                        _("")
                        _("      2 3 ⌷ mat")
                        _("7")
                        _("      2 ⌷ mat")
                        _("5 6 7 8")
                        _("")
                        _("      2 ⌷[2] mat")
                        _("2 6 10")
                        _("")
                        )
NAME("Grade Up"),CHAR("⍋"),TIP(
                        _("Monadic function:  Grade Up")
                        _("")
                        _("Indices which would select items in ascending order.")
                        _("")
                        _("      ⍋ 33 11 44 66 22")
                        _("2 5 1 3 4")
                        _("")
                        _("      names←'Joe' 'Sue' 'Sam'")
                        _("      ages←34 22 25")
                        _("")
                        _("      names[⍋ages]")
                        _("┌───┬───┬───┐")
                        _("│Sue│Sam│Joe│")
                        _("└───┴───┴───┘")
                        _("")
                        _("      ⍋ 'ABC' ⎕NULL ⍬ ¯3j4 'A'")
                        _("3 2 4 5 1")
                        _("")
                        _("Dyadic function:   Dyadic Grade Up")
                        _("")
                        _("Provide collating sequence for character data.")
                        _("")
                        _("      ⍋ 'Banana'")
                        _("1 2 4 6 3 5")
                        _("")
                        _("      'an' ⍋ 'Banana'")
                        _("2 4 6 3 5 1")
                        _("")
                        )
NAME("Grade Down"),CHAR("⍒"),TIP(
                        _("Monadic function:  Grade Down")
                        _("")
                        _("Indices which would select items in descending order.")
                        _("")
                        _("      ⍒ 33 11 44 66 22")
                        _("4 3 1 5 2")
                        _("")
                        _("      names←'Joe' 'Sue' 'Sam'")
                        _("      ages←34 22 25")
                        _("")
                        _("      names[⍒ages]")
                        _("┌───┬───┬───┐")
                        _("│Joe│Sam│Sue│")
                        _("└───┴───┴───┘ ")
                        _("")
                        _("      ⍒ 'ABC' ⎕NULL ⍬ ¯3j4 'A'")
                        _("1 5 4 2 3")
                        _("")
                        _("Dyadic function:   Dyadic Grade Down")
                        _("")
                        _("Provide collating sequence for character data.")
                        _("")
                        _("      ⍒ 'Banana'")
                        _("3 5 2 4 6 1")
                        _("")
                        _("      'an' ⍒ 'Banana'")
                        _("1 3 5 2 4 6")
                        _("")
                        )
BLANK
NAME("Iota"),CHAR("⍳"),TIP(
                        _("Monadic function:  Index Generator")
                        _("")
                        _("      ⍳ 10")
                        _("1 2 3 4 5 6 7 8 9 10")
                        _("")
                        _("      ⍳ 2 3")
                        _("┌───┬───┬───┐")
                        _("│1 1│1 2│1 3│")
                        _("├───┼───┼───┤")
                        _("│2 1│2 2│2 3│")
                        _("└───┴───┴───┘")
                        _("")
                        _("Dyadic function:   Index Of")
                        _("")
                        _("      'ABCDABCDEF' ⍳ 'ACF'")
                        _("1 3 10")
                        _("")
                        _("      mat")
                        _("1 2")
                        _("3 4")
                        _("5 6")
                        _("      mat ⍳ 5 6")
                        _("3")
                        _("")
                        )
#if HAS_UNICODE
NAME("Iota Underbar"),CHAR("⍸"),TIP(
                        _("Monadic function:  Where")
                        _("")
                        _("      ⍸ 1 0 0 1 1")
                        _("1 4 5")
                        _("      bmat")
                        _("0 1 0")
                        _("1 0 1")
                        _("      ⍸ bmat")
                        _("┌───┬───┬───┐")
                        _("│1 2│2 1│2 3│")
                        _("└───┴───┴───┘")
                        _("")
                        _("Dyadic function:   Interval Index")
                        _("")
                        _("      'AEIOU' ⍸ 'DYALOG'")
                        _("1 5 1 3 4 2")
                        _("")
                        _("      2 4 6 ⍸ 1 2 3 4 5 6 7")
                        _("0 1 1 2 2 3 3")
                        _("")
                        _("      mat")
                        _("1 2")
                        _("3 4")
                        _("5 6")
                        _("      mat ⍸ 3 3")
                        _("1")
                        _("      mat ⍸ 3 5")
                        _("2")
                        _("")
                        )
#endif
NAME("Epsilon"),CHAR("∊"),TIP(
                        _("Monadic function:  Enlist")
                        _("")
                        _("      mat")
                        _("1 2 3")
                        _("4 5 6")
                        _("      ∊ 0 mat (7 8) 9")
                        _("0 1 2 3 4 5 6 7 8 9")
                        _("")
                        _("      ∊ 2 3⍴1 'abc'")
                        _("1 abc 1 abc 1 abc")
                        _("")
                        _("Dyadic function:   Membership")
                        _("")
                        _("      'abc' 4 ∊ 4 'ab' 'abcd'")
                        _("0 1")
                        _("      mat ∊ 6 2 7 4")
                        _("0 1 0")
                        _("1 0 1")
                        _("")
                        )
NAME("Epsilon Underbar"),CHAR("⍷"),TIP(
                        _("Dyadic function:   Find")
                        _("")
                        _("      'ana' ⍷ 'Banana'")
                        _("0 1 0 1 0 0")
                        _("")
                        _("      X Y")
                        _("┌───┬───────┐")
                        _("│0 1│0 1 0 0│")
                        _("│1 0│1 0 0 1│")
                        _("│   │0 0 1 0│")
                        _("│   │0 1 0 0│")
                        _("└───┴───────┘")
                        _("")
                        _("      X ⍷ Y")
                        _("1 0 0 0")
                        _("0 0 1 0")
                        _("0 1 0 0")
                        _("0 0 0 0")
                        _("")
                        )
NAME("Down Shoe"),CHAR("∪"),TIP(
                        _("Monadic function:  Unique")
                        _("")
                        _("      ∪ 'ab' 'ba' 'ab' 1 1 2")
                        _("┌──┬──┬─┬─┐")
                        _("│ab│ba│1│2│")
                        _("└──┴──┴─┴─┘")
                        _("")
                        _("      mat")
                        _("flywheel")
                        _("shyster ")
                        _("flywheel")
                        _("     ∪mat")
                        _("flywheel")
                        _("shyster ")
                        _("")
                        _("Dyadic function:   Union")
                        _("")
                        _("      'ab' 'cde' 'fg' ∪ 'a' 'ab'")
                        _("┌──┬───┬──┬─┐")
                        _("│ab│cde│fg│a│")
                        _("└──┴───┴──┴─┘")
                        _("")
                        )
NAME("Up Shoe"),CHAR("∩"),TIP(
                        _("Dyadic function:   Intersection")
                        _("")
                        _("      22 'ab' 'fg' ∩ 'a' 'ab' 22")
                        _("┌──┬──┐")
                        _("│22│ab│")
                        _("└──┴──┘")
                        _("")
                        )
NAME("Tilde"),CHAR("~"),TIP(
                        _("Monadic function:  NOT")
                        _("")
                        _("      ~ 0 1 0 1")
                        _("1 0 1 0")
                        _("")
                        _("Dyadic function:   Without")
                        _("")
                        _("      3 1 4 1 5 ~ 5 1")
                        _("3 4")
                        _("")
                        _("      'aa' 'bb' 'cc' 'bb'  ~ 'bb' 'xx'")
                        _("┌──┬──┐")
                        _("│aa│cc│")
                        _("└──┴──┘")
                        _("")
                        )
BLANK
NAME("Slash"),CHAR("/"),TIP(
                        _("Dyadic function:   Replicate")
                        _("")
                        _("      3 1 ¯2 2 / 6 7 8 9")
                        _("6 6 6 7 0 0 9 9")
                        _("")
                        _("      1 0 1 0 1 / 'Heart'")
                        _("Hat")
                        _("")
                        _("Monadic operator: Reduce (Fold, N-Wise Reduce)")
                        _("")
                        _("      +/ 1 2 3 4 5")
                        _("15")
                        _("      2 +/ 1 2 3 4 5   ⍝ pair-wise sum")
                        _("3 5 7 9")
                        _("")
                        _("      cube    ⍝ 3D array")
                        _(" 1  2  3  4")
                        _(" 5  6  7  8")
                        _(" 9 10 11 12")
                        _("")
                        _("13 14 15 16")
                        _("17 18 19 20")
                        _("21 22 23 24")
                        _("")
                        _("      +/ cube")
                        _("10 26 42")
                        _("58 74 90")
                        _("")
                        _("      +/[1] cube    ⍝ sum of planes")
                        _("14 16 18 20")
                        _("22 24 26 28")
                        _("30 32 34 36")
                        _("")
                        _("      +/[2] cube    ⍝ column sums")
                        _("15 18 21 24")
                        _("51 54 57 60")
                        _("")
                        )
NAME("Backslash"),CHAR("\\"),TIP(
                        _("Dyadic function:   Expand")
                        _("")
                        _("      3 ¯2 4 \\ 7 8")
                        _("7 7 7 0 0 8 8 8 8")
                        _("")
                        _("      1 0 1 0 1 \\ 'Hat'")
                        _("H a t")
                        _("")
                        _("Monadic operator: Scan")
                        _("")
                        _("      +\\ 1 2 3 4 5")
                        _("1 3 6 10 15")
                        _("")
                        _("      mat")
                        _("1  2  3  4")
                        _("5  6  7  8")
                        _("9 10 11 12")
                        _("")
                        _("      +\\ mat")
                        _("1  3  6 10")
                        _("5 11 18 26")
                        _("9 19 30 42")
                        _("")
                        _("      +\\[1] mat")
                        _(" 1  2  3  4")
                        _(" 6  8 10 12")
                        _("15 18 21 24")
                        _("")
                        )
NAME("Slash Bar"),CHAR("⌿"),TIP(
                        _("Dyadic function:  Replicate First (Compress First)")
                        _("")
                        _("      mat")
                        _("1  2  3  4")
                        _("5  6  7  8")
                        _("9 10 11 12")
                        _("")
                        _("      1 0 2 ⌿ mat")
                        _("1  2  3  4")
                        _("9 10 11 12")
                        _("9 10 11 12")
                        _("")
                        _("Monadic operator: Reduce First")
                        _("")
                        _("      +⌿ mat")
                        _("15 18 21 24")
                        _("")
                        _("      2 +⌿ mat     ⍝ pair-wise")
                        _(" 6  8 10 12")
                        _("14 16 18 20")
                        _("")
                        )
NAME("Backslash Bar"),CHAR("⍀"),TIP(
                        _("Dyadic function:   Expand First")
                        _("")
                        _("      mat")
                        _("1  2  3  4")
                        _("5  6  7  8")
                        _("9 10 11 12")
                        _("")
                        _("      1 0 2 1 ⍀ mat")
                        _("1  2  3  4")
                        _("0  0  0  0")
                        _("5  6  7  8")
                        _("5  6  7  8")
                        _("9 10 11 12")
                        _("")
                        _("Monadic operator: Scan First")
                        _("")
                        _("      +⍀ mat")
                        _(" 1  2  3  4")
                        _(" 6  8 10 12")
                        _("15 18 21 24 ")
                        _("")
                        )
BLANK
NAME("Comma"),CHAR(","),TIP(
                        _("Monadic function:  Ravel")
                        _("")
                        _("      cube    ⍝ 3D array")
                        _("1 2")
                        _("3 4")
                        _("")
                        _("5 6")
                        _("7 8")
                        _("      , cube")
                        _("1 2 3 4 5 6 7 8")
                        _("")
                        _("      ,[2 3] cube    ⍝ Ravel with axes")
                        _("1 2 3 4")
                        _("5 6 7 8")
                        _("")
                        _("Dyadic function:   Catenate/Laminate (Join)")
                        _("")
                        _("      1 2 3 , 4 5 6")
                        _("1 2 3 4 5 6")
                        _("")
                        _("      cube , 99")
                        _("1 2 99")
                        _("3 4 99")
                        _("")
                        _("5 6 99")
                        _("7 8 99")
                        _("")
                        _("      1 2 3 ,[0.5] 4 5 6   ⍝ Laminate")
                        _("1 2 3")
                        _("4 5 6 ")
                        _("")
                        )
NAME("Comma Bar"),CHAR("⍪"),TIP(
                        _("Monadic function:  Table")
                        _("")
                        _("      ⍪ 2 3 4")
                        _("2")
                        _("3")
                        _("4")
                        _("      cube    ⍝ 3D array")
                        _("1 2")
                        _("3 4")
                        _("")
                        _("5 6")
                        _("7 8")
                        _("      ⍪ cube")
                        _("1 2 3 4")
                        _("5 6 7 8")
                        _("")
                        _("Dyadic function:   Catenate First/Laminate")
                        _("")
                        _("      mat")
                        _("1 2 3")
                        _("4 5 6")
                        _("")
                        _("      mat ⍪ 0")
                        _("1 2 3")
                        _("4 5 6")
                        _("0 0 0")
                        _("")
                        _("      mat ⍪ 7 8 9")
                        _("1 2 3")
                        _("4 5 6")
                        _("7 8 9")
                        _("")
                        )
NAME("Rho"),CHAR("⍴"),TIP(
                        _("Monadic function:  Shape")
                        _("")
                        _("      mat")
                        _("1  2  3  4")
                        _("5  6  7  8")
                        _("9 10 11 12")
                        _("")
                        _("      ⍴ mat")
                        _("3 4")
                        _("      ⍴⍴ mat")
                        _("2")
                        _("      ⍴ 'your boat'")
                        _("9")
                        _("      ⍴ 7")
                        _("")
                        _("      ⍴⍴ 7")
                        _("0")
                        _("")
                        _("Dyadic function:   Reshape")
                        _("")
                        _("      2 3 4 ⍴ 1 2 3 4 5 6 7")
                        _("1 2 3 4")
                        _("5 6 7 1")
                        _("2 3 4 5")
                        _("")
                        _("6 7 1 2")
                        _("3 4 5 6")
                        _("7 1 2 3")
                        _("")
                        )
NAME("Circle Stile"),CHAR("⌽"),TIP(
                        _("Monadic function:  Reverse")
                        _("")
                        _("      ⌽ 'trams'")
                        _("smart")
                        _("")
                        _("      mat")
                        _("1  2  3  4")
                        _("5  6  7  8")
                        _("9 10 11 12")
                        _("")
                        _("      ⌽ mat")
                        _(" 4  3  2 1")
                        _(" 8  7  6 5")
                        _("12 11 10 9")
                        _("")
                        _("      ⌽[1] mat")
                        _("9 10 11 12")
                        _("5  6  7  8")
                        _("1  2  3  4")
                        _("")
                        _("Dyadic function:   Rotate")
                        _("")
                        _("      3 ⌽ 'HatStand'")
                        _("StandHat")
                        _("")
                        _("      ¯2 ⌽ 1 2 3 4 5 6")
                        _("5 6 1 2 3 4")
                        _("")
                        _("      ¯1 ⌽ mat")
                        _(" 4 1  2  3")
                        _(" 8 5  6  7")
                        _("12 9 10 11")
                        _("")
                        _("      1 ¯1 2 ⌽ mat")
                        _(" 2  3 4  1")
                        _(" 8  5 6  7")
                        _("11 12 9 10")
                        _("")
                        _("      0 1 2 ¯1 ⌽[1] mat")
                        _("1  6 11 12")
                        _("5 10  3  4")
                        _("9  2  7  8")
                        _("")
                        )
NAME("Circle Bar"),CHAR("⊖"),TIP(
                        _("Monadic function:  Reverse First")
                        _("")
                        _("      mat")
                        _("1  2  3  4")
                        _("5  6  7  8")
                        _("9 10 11 12")
                        _("")
                        _("      ⊖ mat")
                        _("9 10 11 12")
                        _("5  6  7  8")
                        _("1  2  3  4")
                        _("")
                        _("Dyadic function:   Rotate First")
                        _("")
                        _("      0 1 2 ¯1 ⊖ mat")
                        _("1  6 11 12")
                        _("5 10  3  4")
                        _("9  2  7  8")
                        _("")
                        )
NAME("Transpose"),CHAR("⍉"),TIP(
                        _("Monadic function:  Transpose")
                        _("")
                        _("      mat")
                        _("1 2 3")
                        _("4 5 6")
                        _("")
                        _("      ⍉ mat")
                        _("1 4")
                        _("2 5")
                        _("3 6")
                        _("")
                        _("")
                        _("Dyadic function:   Dyadic Transpose")
                        _("")
                        _("      2 1 ⍉ mat")
                        _("1 4")
                        _("2 5")
                        _("3 6")
                        _("")
                        _("      1 1 ⍉ mat   ⍝ leading diagonal")
                        _("1 5")
                        _("")
                        _("")
                        )
BLANK
NAME("Diaeresis"),CHAR("¨"),TIP(
                        _("Monadic operator: Each (Map)")
                        _("")
                        _("      ⊃¨ 1 2 3 'ABC' (9 8 7)")
                        _("1 2 3 A 9")
                        _("")
                        _("      +/¨ (1 2 3 4)(5 6 7)")
                        _("10 18")
                        _("")
                        _("      3 ↑¨ 1 2 (3 4) 'V'")
                        _("┌─────┬─────┬─────┬───┐")
                        _("│1 0 0│2 0 0│3 4 0│V  │")
                        _("└─────┴─────┴─────┴───┘")
                        _("")
                        _("      1 2 3 ,¨ 99")
                        _("┌────┬────┬────┐")
                        _("│1 99│2 99│3 99│")
                        _("└────┴────┴────┘")
                        _("")
                        )
NAME("Tilde Diaeresis"),CHAR("⍨"),TIP(
                        _("Monadic operator (f⍨): Commute (Switch)")
                        _("")
                        _("      2 ⍴ 3     ⍝ ⍺ ⍴ ⍵")
                        _("3 3")
                        _("      2 ⍴⍨ 3    ⍝ ⍵ ⍴ ⍺")
                        _("2 2 2")
                        _("      ⍴⍨ 3      ⍝ ⍵ ⍴ ⍵")
                        _("3 3 3")
                        _("")
                        _("Monadic operator (a⍨): Constant")
                        _("")
                        _("      'mu'⍨ 'any' ⎕NULL   ⍝ Always returns its operand")
                        _("mu")
                        _("      1E100 ('mu'⍨) 1j1")
                        _("mu")
                        _("      ¯1⍨¨ ⍳2 3")
                        _("¯1 ¯1 ¯1")
                        _("¯1 ¯1 ¯1")
                        _("")
                        )
NAME("Star Diaeresis"),CHAR("⍣"),TIP(
                        _("Dyadic operator: Power")
                        _("")
                        _("      cube    ⍝ 3D array")
                        _("AB")
                        _("CD")
                        _("")
                        _("EF")
                        _("GH")
                        _("      (↓⍣1) cube   ⍝ split once")
                        _("┌──┬──┐")
                        _("│AB│CD│")
                        _("├──┼──┤")
                        _("│EF│GH│")
                        _("└──┴──┘")
                        _("      (↓⍣2) cube   ⍝ split twice")
                        _("┌───────┬───────┐")
                        _("│┌──┬──┐│┌──┬──┐│")
                        _("││AB│CD│││EF│GH││")
                        _("│└──┴──┘│└──┴──┘│")
                        _("└───────┴───────┘")
                        _("")
                        _("      f ← (32∘+)∘(×∘1.8)   ⍝ Fahrenheit from Celsius")
                        _("")
                        _("      f ¯273 ¯40 0 100     ⍝ Fahrenheit")
                        _("¯459.4 ¯40 32 212")
                        _("")
                        _("      c ← f⍣¯1             ⍝ Inverse: Celsius from Fahrenheit")
                        _("")
                        _("      c ¯459.4 ¯40 32 212  ⍝ Celsius")
                        _("¯273 ¯40 0 100")
                        _("")
                        _("      1 +∘÷⍣= 1            ⍝ fixpoint: golden mean")
                        _("1.61803 ")
                        _("")
                        )
NAME("Dot"),CHAR("."),TIP(
                        _("Dyadic operator: Product")
                        _("")
                        _("Inner Product f.g      ")
                        _("")
                        _("      1 2 3 +.× 4 5 6")
                        _("32")
                        _("      3 ∧.= 3 3 3 3")
                        _("1")
                        _("      mat")
                        _("1 2")
                        _("3 4")
                        _("      mat +.× mat   ⍝ matrix product")
                        _(" 7 10")
                        _("15 22")
                        _("")
                        _("Outer Product ∘.g")
                        _("")
                        _("      1 2 3 ∘.× 4 5 6 7")
                        _(" 4  5  6  7")
                        _(" 8 10 12 14")
                        _("12 15 18 21")
                        _("")
                        )
NAME("Jot"),CHAR("∘"),TIP(
                        _("Dyadic operator: Beside and Bind")
                        _("")
                        _("NB: ∘ is also used in outer product ∘.f - see Dot (.)")
                        _("")
                        _("Beside")
                        _("")
                        _("      ⌽∘⍳¨ 3 4 5")
                        _("┌─────┬───────┬─────────┐")
                        _("│3 2 1│4 3 2 1│5 4 3 2 1│")
                        _("└─────┴───────┴─────────┘")
                        _("")
                        _("      ¯1 ⌽∘⍳¨ 3 4 5")
                        _("┌─────┬───────┬─────────┐")
                        _("│3 1 2│4 1 2 3│5 1 2 3 4│")
                        _("└─────┴───────┴─────────┘")
                        _("")
                        _("      +∘÷/ 40⍴1    ⍝ continued fraction")
                        _("1.61803")
                        _("")
                        )
#if HAS_UNICODE
NAME("Jot Underbar"),CHAR("⍛"),TIP(
                        _("Dyadic operator: Behind")
                        _("")
                        _("      -⍛, 4   ⍝ (  f⍛g y) ≡ (f y) g y")
                        _("¯4 4")
                        _("")
                        _("      ⊂⍤⍋⍛⌷ 3 1 4 1 5 9 2 6  ⍝ Sort")
                        _("1 1 2 3 4 5 6 9")
                        _("")
                        _("      3 -⍛, 4 ⍝ (x f⍛g y) ≡ (f x) g y")
                        _("¯3 4")
                        _("")
                        _("      8 ⍳⍛∊ 1 2 3 5")
                        _("1 1 1 0 1 0 0 0")
                        _("")
                        )
#endif
#if HAS_UNICODE
NAME("Jot Diaeresis"),CHAR("⍤"),TIP(
                        _("Dyadic operator (f⍤g): Atop")
                        _("")
                        _("      -⍤÷ 4      ⍝ (  f⍤g y) ≡  f   g y")
                        _("¯0.25")
                        _("      12 -⍤÷ 4   ⍝ (x f⍤g y) ≡ (f x g y)")
                        _("¯3")
                        _("      3 1 4 1 5 ~⍤∊ 1 2 3")
                        _("0 0 1 0 1")
                        _("")
                        _("Dyadic operator (f⍤a):   Rank ")
                        _("")
                        _("      cube    ⍝ 3D array")
                        _(" 1  2  3")
                        _(" 4  5  6")
                        _("")
                        _(" 7  8  9")
                        _("10 11 12")
                        _("")
                        _("      (,⍤2) cube")
                        _("1 2 3  4  5  6")
                        _("7 8 9 10 11 12")
                        _("")
                        _("      cmat    ⍝ character matrix")
                        _("abc")
                        _("zxy ")
                        _("      (⍋⍤1) cmat    ⍝ grade-up by row  ")
                        _("1 2 3 ")
                        _("2 3 1 ")
                        _("      nmat     ⍝ numeric matrix")
                        _("1  2  3  4")
                        _("5  6  7  8")
                        _("9 10 11 12")
                        _("")
                        _("      10 20 30 (+⍤0 1) nmat  ⍝ scalars plus vectors")
                        _("11 12 13 14 ")
                        _("25 26 27 28 ")
                        _("39 40 41 42")
                        _("")
                        )
#endif
#if HAS_UNICODE
NAME("Circle Dieresis"),CHAR("⍥"),TIP(
                        _("Dyadic operator: Over")
                        _("")
                        _("      -⍥⌊ 3.6                 ⍝ Same as ∘ or ⍤ monadically")
                        _("¯3")
                        _("      5.1 -⍥⌊ 3.6             ⍝ Applies ⌊ to both arguments")
                        _("2")
                        _("      'Dyalog' ≡⍥⎕C 'DYALOG'  ⍝ Case-insensitive match")
                        _("1")
                        _("      'Dyalog' ≡⍥⎕C 'IBM'")
                        _("0")
                        _("")
                        )
#endif
NAME("At"),CHAR("@"),TIP(
                        _("Dyadic operator: At")
                        _("")
                        _("      (0@2 4) 1 2 3 4 5")
                        _("1 0 3 0 5")
                        _("")
                        _("      10 (×@2 4) 1 2 3 4 5")
                        _("1 20 3 40 5")
                        _("")
                        _("      (÷@2 4) 1 2 3 4 5")
                        _("1 0.5 3 0.25 5")
                        _("")
                        _("      '*'@(2∘|) 1 2 3 4 5   ⍝ Boolean selection 1 0 1 0 1")
                        _("* 2 * 4 *")
                        _("")
                        _("      ⌽@(2∘|) 1 2 3 4 5     ⍝ Reversal of sub-array 1 3 5")
                        _("5 2 3 4 1")
                        _("")
                        )
BLANK
NAME("Quote Quad"),CHAR("⍞"),TIP(
                        _("Niladic:     Character Input/Output")
                        _("")
                        _("      chars ← ⍞     ⍝ input session line")
                        _("hello")
                        _("      chars")
                        _("hello")
                        _("      ⍞ ← 'Name:'   ⍝ places text in session")
                        _("Name: ")
                        _("      ask ← {⍞←⍵ ⋄ (≢⍵)↓⍞}   ⍝ prompt for input:")
                        _("")
                        _("      name ← ask¨ 'First:  ' 'Second: '")
                        _("First:  John")
                        _("Second: Brown")
                        _("")
                        _("      name")
                        _("┌────┬─────┐")
                        _("│John│Brown│")
                        _("└────┴─────┘")
                        _("")
                        )
NAME("Quad"),CHAR("⎕"),TIP(
                        _("Niladic:     Evaluated Input/Output")
                        _("")
                        _("      2+⎕+4")
                        _("⎕:")
                        _("      8-5")
                        _("9")
                        _("")
                        _("      2+⎕←3+4")
                        _("7")
                        _("9")
                        _("")
                        )
#if HAS_UNICODE
NAME("Quad Colon"),CHAR("⍠"),TIP(
                        _("Dyadic operator: Variant")
                        _("")
                        _("      ('a' ⎕R 'x') 'ABC'           ⍝ 'a' replaced with 'x'")
                        _("ABC")
                        _("")
                        _("      ('a' ⎕R 'x' ⍠ 'IC' 1) 'ABC'  ⍝ .. Ignoring Case")
                        _("xBC")
                        _("")
                        _("      IgnCase ← ⍠ 'IC' 1")
                        _("")
                        _("      'a' ⎕R 'x' IgnCase 'ABC'")
                        _("xBC ")
                        _("")
                        )
#endif
#if HAS_UNICODE
NAME("Quad Equal"),CHAR("⌸"),TIP(
                        _("Monadic operator:  Key ")
                        _("")
                        _("      'Banana' {⍺ ⍵}⌸ 3 1 4 1 5 9")
                        _("┌─┬─────┐")
                        _("│B│3    │")
                        _("├─┼─────┤")
                        _("│a│1 1 9│")
                        _("├─┼─────┤")
                        _("│n│4 5  │")
                        _("└─┴─────┘")
                        _("      'Banana' {⍺,+/⍵}⌸ 3 1 4 1 5 9")
                        _("B  3")
                        _("a 11")
                        _("n  9     ")
                        _("      'Banana' {⍺ ⍵}⌸ 1 2 3 4 5 6")
                        _("┌─┬─────┐")
                        _("│B│1    │")
                        _("├─┼─────┤")
                        _("│a│2 4 6│")
                        _("├─┼─────┤")
                        _("│n│3 5  │")
                        _("└─┴─────┘")
                        _("      {⍺ ⍵}⌸ 'Banana'  ⍝ (same as above)")
                        _("┌─┬─────┐")
                        _("│B│1    │")
                        _("├─┼─────┤")
                        _("│a│2 4 6│")
                        _("├─┼─────┤")
                        _("│n│3 5  │")
                        _("└─┴─────┘")
                        _("")
                        )
#endif
#if HAS_UNICODE
NAME("Quad Diamond"),CHAR("⌺"),TIP(
                        _("Dyadic operator:  Stencil")
                        _("")
                        _("      mat")
                        _(" 1  2  3  4")
                        _(" 5  6  7  8")
                        _(" 9 10 11 12")
                        _("13 14 15 16")
                        _("")
                        _("      ({⊂⍵}⌺3 3) mat")
                        _("┌───────┬────────┬────────┬───────┐")
                        _("│0 0 0  │0 0 0   │0 0 0   │0 0 0  │")
                        _("│0 1 2  │1 2 3   │2 3 4   │3 4 0  │")
                        _("│0 5 6  │5 6 7   │6 7 8   │7 8 0  │")
                        _("├───────┼────────┼────────┼───────┤")
                        _("│0 1  2 │1  2  3 │ 2  3  4│ 3  4 0│")
                        _("│0 5  6 │5  6  7 │ 6  7  8│ 7  8 0│")
                        _("│0 9 10 │9 10 11 │10 11 12│11 12 0│")
                        _("├───────┼────────┼────────┼───────┤")
                        _("│0  5  6│ 5  6  7│ 6  7  8│ 7  8 0│")
                        _("│0  9 10│ 9 10 11│10 11 12│11 12 0│")
                        _("│0 13 14│13 14 15│14 15 16│15 16 0│")
                        _("├───────┼────────┼────────┼───────┤")
                        _("│0  9 10│ 9 10 11│10 11 12│11 12 0│")
                        _("│0 13 14│13 14 15│14 15 16│15 16 0│")
                        _("│0  0  0│ 0  0  0│ 0  0  0│ 0  0 0│")
                        _("└───────┴────────┴────────┴───────┘")
                        _("")
                        _("      ({+/,⍵}⌺3 3) mat")
                        _("14 24 30 22")
                        _("33 54 63 45")
                        _("57 90 99 69")
                        _("46 72 78 54")
                        _("")
                        )
#endif
#if HAS_UNICODE
NAME("I-Beam"),CHAR("⌶"),TIP(
                        _("Monadic operator:  I-Beam")
                        _("")
                        _("Provides a system-related service")
                        _("determined by the left-operand value.")
                        _("(see Dyalog APL Language Reference Guide)")
                        _("")
                        _("")
                        )
#endif
NAME("Hydrant"),CHAR("⍎"),TIP(
                        _("Monadic function:  Execute expression")
                        _("")
                        _("      ⍎ '1+1'")
                        _("2")
                        _("      V ← 1 2 3")
                        _("      ⍎ 'V'")
                        _("1 2 3")
                        _("")
                        _("Dyadic function:  Execute expression in namespace")
                        _("")
                        _("     '#' ⍎ '⎕PP ⎕CT ⎕RL'")
                        _("┌──┬─────┬────┐")
                        _("│10│1E¯14│┌┬─┐│")
                        _("│  │     │││1││")
                        _("│  │     │└┴─┘│")
                        _("└──┴─────┴────┘")
                        _("")
                        _("")
                        )
NAME("Thorn"),CHAR("⍕"),TIP(
                        _("Monadic function:  Format")
                        _("")
                        _("NB: In the following examples space characters")
                        _("    are represented by small dots: ···")
                        _("")
                        _("      4 5 6          ⍝ numeric vector")
                        _("4 5 6")
                        _("      ⍕ 4 5 6        ⍝ equivalent character vector")
                        _("4·5·6")
                        _("")
                        _("      mat            ⍝ numeric matrix")
                        _("1 2 3")
                        _("4 5 6")
                        _("")
                        _("      ⍕ mat          ⍝ equivalent character matrix")
                        _("1·2·3")
                        _("4·5·6")
                        _("")
                        _("Dyadic function:   Format By Specification")
                        _("")
                        _("Field-width and number of decimal places:")
                        _("")
                        _("      6 2 ⍕ 3.125 0.002")
                        _("··3.13··0.00")
                        _("")
                        _("      6 2 ⍕ mat")
                        _("··1.00··2.00··3.00")
                        _("··4.00··5.00··6.00")
                        _("")
                        _("      6 2 ⍕ 1234   ⍝ (field not wide enough)")
                        _("******")
                        _("")
                        )
BLANK
NAME("Diamond"),CHAR("⋄"),TIP(
                        _("Syntax:    Statement Separator")
                        _("")
                        _("      Statements are evaluated sequentially")
                        _("      from left to right.")
                        _("")
                        _("      A←4 ⋄ A←A×3 ⋄ A÷2")
                        _("6")
                        _("")
                        )
NAME("Lamp"),CHAR("⍝"),TIP(
                        _("Syntax: Comment")
                        _("")
                        _("Text to the right of ⍝ is ignored.")
                        _("")
                        _("      2+3  ⍝ this is a comment")
                        _("5")
                        _("")
                        )
NAME("Right Arrow"),CHAR("→"),TIP(
                        _("Syntax:  Branch (Clear suspension)")
                        _("")
                        _("      → Label  ⍝ branch to Label:")
                        _("      → ⎕LC    ⍝ resume suspended execution")
                        _("      → 0      ⍝ exit current function and resume calling line")
                        _("      →        ⍝ clear one stack suspension")
                        _("")
                        _("Branching is superseded by the more modern")
                        _("control structures such as :If ... :EndIf")
                        _("")
                        )
NAME("Omega"),CHAR("⍵"),TIP(
                        _("Omega Syntax:           Right argument of a dfn")
                        _("")
                        _("      2 {⍵+1} 5")
                        _("6")
                        _("")
                        _("Double-Omega Syntax:    Right operand of a dop")
                        _("")
                        _("      3 +{⍺ ⍵⍵ ⍵}× 4")
                        _("12")
                        _("")
                        _("")
                        )
NAME("Alpha"),CHAR("⍺"),TIP(
                        _("Alpha Syntax:           Left argument of a dfn")
                        _("")
                        _("      2 {⍺+1} 5")
                        _("3")
                        _("Double-Alpha Syntax:    Left Operand of a dop")
                        _("")
                        _("      3 +{⍺ ⍺⍺ ⍵} 4")
                        _("7")
                        _("")
                        )
NAME("Del"),CHAR("∇"),TIP(
                        _("Del Syntax:         dfn self-reference (recursion)")
                        _("")
                        _("      fact←{             ⍝ Factorial ⍵.")
                        _("          ⍵≤1: 1         ⍝ small ⍵: finished")
                        _("          ⍵×∇ ⍵-1        ⍝ otherwise: recurse")
                        _("      }")
                        _("")
                        _("Double-Del Syntax:  dop self-reference")
                        _("")
                        _("    pow←{                ⍝ power operator: apply ⍵⍵ times")
                        _("        ⍵⍵=0:⍵           ⍝ ⍵⍵ is 0: finished")
                        _("        ⍺⍺ ∇∇(⍵⍵-1)⍺⍺ ⍵  ⍝ otherwise: recurse")
                        _("    }")
                        _("")
                        )
NAME("Ampersand"),CHAR("&"),TIP(
                        _("Monadic operator:  Spawn")
                        _("")
                        _("      delay←{'Delayed: ',⎕DL ⍵}    ⍝ delay function")
                        _("")
                        _("      delay 10    ⍝ delay for 10 seconds")
                        _("Delayed:  10.2228")
                        _("")
                        _("      ⎕←delay&10  ⍝ delay for 10 seconds in new thread 1")
                        _("1")
                        _("")
                        _("      2+3 4       ⍝ execute something in current thread")
                        _("5 6")
                        _("                  ⍝ thread 1 completes:")
                        _("Delayed:  10.03183")
                        _("")
                        )
BLANK
NAME("High Minus"),CHAR("¯"),TIP(
                        _("Qualifier for negative number")
                        _("")
                        _("      1 + ¯1 0 1 ¯3")
                        _("0 1 2 ¯2")
                        _("")
                        _("      3e¯2")
                        _("0.03")
                        _("")
                        )
NAME("Zilde"),CHAR("⍬"),TIP(
                        _("Niladic:  Empty Numeric Vector")
                        _("")
                        _("      ⍬≡⍳0")
                        _("1")
                        _("      ⍬≡0⍴0")
                        _("1")
                        _("      ⍬≡0 0⍴0")
                        _("0")
                        _("      ⍬≡''")
                        _("0")
                        _("")
                        )
